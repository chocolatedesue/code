#include<bits/stdc++.h>
using namespace std;
#define MAXN ((int)3e5+10)
int Tree[MAXN];
int n,m;
int a[MAXN];
#define lowbit(x) x&(-x)

void update(int pos){
    while (pos<=n){
        Tree[pos]=a[pos];
        int len=lowbit(pos);
        //思考最大值影响的区间
        //能转移到该点的最大值与该点最大值比较
        for (int i=1;i<len;i<<=1)Tree[pos]=max(Tree[pos],Tree[pos-i]);
        pos+=lowbit(pos);
    }

}
int query(int left,int right){
    int res=-0x3f3f3f3f;
    while (right>=left){
        //外层步长为1，内层步长为lowbit(right)
        res=max(a[right],res),right--;
        for (;right-lowbit(right)>=left;right-=lowbit(right))res=max(Tree[right],res);

    }
    return res;
}

int main(){
    ios::sync_with_stdio(false);
    while(cin>>n>>m){
        for (int i=1;i<=n;++i){
            cin>>a[i];
        }
        for (int i=1;i<=n;++i){
            update(a[i]);
        }
//    getchar();
        for(int i=0;i<m;++i){
            char opt;int left,right;
            cin>>opt>>left>>right;
//        cout<<opt<<endl;
            if (opt=='Q'){
                if (left>right)swap(left,right);
                cout<<query(left,right)<<"\n";
            }
            else {
                //left是坐标，right是值
                a[left]=right;
                update(left);
            }
        }}

    return 0;
}