#include<bits/stdc++.h>
using namespace std;
int n;
int cnt ;
const int N = 1e5+10;
int heap[N*4];
int _size ;
unordered_map<int,int>_m;// 从第几次插入推出堆中位置
unordered_map<int,int>_re;//从堆中位置推出第几次插入


void heap_swap(int pos1,int pos2){
    swap(_m[_re[pos1]],_m[_re[pos2]]);
    swap(_re[pos1],_re[pos2]);
//    if (pos1!=pos2)
    swap(heap[pos1],heap[pos2]);

}


void down (int x){
    int  t = x;
    if (x*2<=_size && heap[t]>heap[x*2]){
        t = x*2;
    }
    if (x*2+1<=_size && heap[t]>heap[x*2+1])t=x*2+1;
    if (x!=t){
        heap_swap(x,t);
        down(t);
    }

}



void up (int pos){
    // int p = pos;
    while (pos/2 && heap[pos]<heap[pos/2]){
        heap_swap(pos,pos/2);
        pos>>=1;
    }

}

void insert (int val){
    heap[++_size]=val;
    _m[++cnt]=_size;
    _re[_size]=cnt;
    up(_size);
}




int main()

{
    cin>>n;
    string opt;
    int k1,k2;
    while (n--){

        cin>>opt;

        // cin>>k1;
        if (opt=="I"){
            cin>>k1;
            insert (k1);
            // _m[++cnt]=_size;
        }
        else if (opt=="PM")cout<<heap[1]<<"\n";
        else if (opt=="DM"){
            heap_swap(_size,1);
            _size--;
            down(1);
        }
        else if (opt=="D"){
            cin>>k1;
            int pos = _m[k1];
            //不要随意换位置
            //swap 会修改_m[k1]指向空,直接被废弃，要保存输入对应的位置操作
            heap_swap(_m[k1],_size);
            _size--;
            down(pos),up(pos);
        }
        else {
            cin>>k1>>k2;
            heap[_m[k1]]=k2;
            up(_m[k1]);
            down(_m[k1]);
        }

    }
}